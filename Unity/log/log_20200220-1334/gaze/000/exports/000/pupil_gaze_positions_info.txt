
    pupil_positions.csv
    keys:
        timestamp - timestamp of the source image frame
        index - associated_frame: closest world video frame
        id - 0 or 1 for right and left eye (from the wearer's point of view)
        confidence - is an assessment by the pupil detector on how sure we can be on this measurement. A value of `0` indicates no confidence. `1` indicates perfect confidence. In our experience usefull data carries a confidence value greater than ~0.6. A `confidence` of exactly `0` means that we don't know anything. So you should ignore the position data.        norm_pos_x - x position in the eye image frame in normalized coordinates
        norm_pos_x - x position in the eye image frame in normalized coordinates
        norm_pos_y - y position in the eye image frame in normalized coordinates
        diameter - diameter of the pupil in image pixels as observed in the eye image frame (is not corrected for perspective)

        method - string that indicates what detector was used to detect the pupil

        --- optional fields depending on detector

        #in 2d the pupil appears as an ellipse available in `3d c++` and `2D c++` detector
        ellipse_center_x - x center of the pupil in image pixels
        ellipse_center_y - y center of the pupil in image pixels
        ellipse_axis_a - first axis of the pupil ellipse in pixels
        ellipse_axis_b - second axis of the pupil ellipse in pixels
        ellipse_angle - angle of the ellipse in degrees


        #data made available by the `3d c++` detector

        diameter_3d - diameter of the pupil scaled to mm based on anthropomorphic avg eye ball diameter and corrected for perspective.
        model_confidence - confidence of the current eye model (0-1)
        model_id - id of the current eye model. When a slippage is detected the model is replaced and the id changes.

        sphere_center_x - x pos of the eyeball sphere is eye pinhole camera 3d space units are scaled to mm.
        sphere_center_y - y pos of the eye ball sphere
        sphere_center_z - z pos of the eye ball sphere
        sphere_radius - radius of the eyeball. This is always 12mm (the anthropomorphic avg.) We need to make this assumption because of the `single camera scale ambiguity`.

        circle_3d_center_x - x center of the pupil as 3d circle in eye pinhole camera 3d space units are mm.
        circle_3d_center_y - y center of the pupil as 3d circle
        circle_3d_center_z - z center of the pupil as 3d circle
        circle_3d_normal_x - x normal of the pupil as 3d circle. Indicates the direction that the pupil points at in 3d space.
        circle_3d_normal_y - y normal of the pupil as 3d circle
        circle_3d_normal_z - z normal of the pupil as 3d circle
        circle_3d_radius - radius of the pupil as 3d circle. Same as `diameter_3d`

        theta - circle_3d_normal described in spherical coordinates
        phi - circle_3d_normal described in spherical coordinates

        projected_sphere_center_x - x center of the 3d sphere projected back onto the eye image frame. Units are in image pixels.
        projected_sphere_center_y - y center of the 3d sphere projected back onto the eye image frame
        projected_sphere_axis_a - first axis of the 3d sphere projection.
        projected_sphere_axis_b - second axis of the 3d sphere projection.
        projected_sphere_angle - angle of the 3d sphere projection. Units are degrees.


    gaze_positions.csv
    keys:
        timestamp - timestamp of the source image frame
        index - associated_frame: closest world video frame
        confidence - computed confidence between 0 (not confident) -1 (confident)
        norm_pos_x - x position in the world image frame in normalized coordinates
        norm_pos_y - y position in the world image frame in normalized coordinates
        base_data - "timestamp-id timestamp-id ..." of pupil data that this gaze position is computed from

        #data made available by the 3d vector gaze mappers
        gaze_point_3d_x - x position of the 3d gaze point (the point the sublejct lookes at) in the world camera coordinate system
        gaze_point_3d_y - y position of the 3d gaze point
        gaze_point_3d_z - z position of the 3d gaze point
        eye_center0_3d_x - x center of eye-ball 0 in the world camera coordinate system (of camera 0 for binocular systems or any eye camera for monocular system)
        eye_center0_3d_y - y center of eye-ball 0
        eye_center0_3d_z - z center of eye-ball 0
        gaze_normal0_x - x normal of the visual axis for eye 0 in the world camera coordinate system (of eye 0 for binocular systems or any eye for monocular system). The visual axis goes through the eye ball center and the object thats looked at.
        gaze_normal0_y - y normal of the visual axis for eye 0
        gaze_normal0_z - z normal of the visual axis for eye 0
        eye_center1_3d_x - x center of eye-ball 1 in the world camera coordinate system (not avaible for monocular setups.)
        eye_center1_3d_y - y center of eye-ball 1
        eye_center1_3d_z - z center of eye-ball 1
        gaze_normal1_x - x normal of the visual axis for eye 1 in the world camera coordinate system (not avaible for monocular setups.). The visual axis goes through the eye ball center and the object thats looked at.
        gaze_normal1_y - y normal of the visual axis for eye 1
        gaze_normal1_z - z normal of the visual axis for eye 1
        